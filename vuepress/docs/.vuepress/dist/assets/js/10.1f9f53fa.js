(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{68:function(n,t,a){"use strict";a.r(t);var e=a(0),r=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"集成说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成说明"}},[n._v("#")]),n._v(" 集成说明")]),n._v(" "),a("h2",{attrs:{id:"ios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ios"}},[n._v("#")]),n._v(" iOS")]),n._v(" "),a("p",[n._v("本手写签批框架最低支持 iOS9.0，低于 9.0 版本的暂不支持")]),n._v(" "),a("h3",{attrs:{id:"手动集成方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动集成方式"}},[n._v("#")]),n._v(" 手动集成方式")]),n._v(" "),a("p",[n._v("为了手写签批的保密性质，暂不提供开放 cocoaPods 导入，仅提供手动集成方式")]),n._v(" "),a("h3",{attrs:{id:"准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[n._v("#")]),n._v(" 准备工作")]),n._v(" "),a("p",[n._v("1、把"),a("code",[n._v("MDHandSignSDK.framework")]),n._v("文件夹拖拽到相关项目中。"),a("br"),n._v("\n2、在"),a("code",[n._v("MDHandSignSDK.framework")]),n._v("同目录下，导入框架里面的"),a("code",[n._v("MDHandSign.bundle")]),n._v("资源包。"),a("br"),n._v("\n3、在项目中，通过 cocopods 引用必须的第三方框架/或者手动导入--"),a("code",[n._v("Masonry")]),n._v("框架，项目依赖，否则不能成功运行（"),a("code",[n._v("具体导入方式可百度搜索相关方案")]),n._v("）。")]),n._v(" "),a("img",{attrs:{src:n.$withBase("/img/screenshot01.png"),alt:"foo"}}),n._v(" "),a("h3",{attrs:{id:"项目配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目配置"}},[n._v("#")]),n._v(" 项目配置")]),n._v(" "),a("p",[n._v("1、在"),a("code",[n._v("TARGETS")]),n._v("->"),a("code",[n._v("Build Settings")]),n._v("中搜索"),a("code",[n._v("Other Linker Flags")]),n._v("，并配置添加："),a("code",[n._v("-ObjC")]),n._v(" 和 "),a("code",[n._v("-all_load")]),n._v(",如图所示：")]),n._v(" "),a("img",{attrs:{src:n.$withBase("/img/screenshot02.png"),alt:"foo"}}),n._v(" "),a("h3",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[n._v("#")]),n._v(" 补充说明")]),n._v(" "),a("p",[n._v("1、必须框架 "),a("code",[n._v("Masonry")]),n._v("\n手写签批 SDK 依赖 Masonry 第三方库，需要通过手动或 cocopods 引入该 Masonry 框架，才能正常使用。")]),n._v(" "),a("p",[n._v("2、非必须框架\n"),a("code",[n._v("FDFullscreenPopGesture")]),n._v(", "),a("code",[n._v("1.1")]),n._v(" "),a("a",{attrs:{href:"https://github.com/forkingdog/FDFullscreenPopGesture",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("3、如果项目导入手写签批 SDK 时，运行项目并打上了全局断点时，请选择断点模式为 OC 模式，去除 C 语言的断点，由于 SDK 中使用了 C 的库存在个别断点不能走下去，具体如图所示：")]),n._v(" "),a("img",{attrs:{src:n.$withBase("/img/screenshot03.png"),alt:"foo"}}),n._v(" "),a("img",{attrs:{src:n.$withBase("/img/screenshot04.png"),alt:"foo"}}),n._v(" "),a("p",[a("code",[n._v("如遇到导入SDK后存在个别特殊原因，请及时联系相关的SDK开发人员进行处理")])]),n._v(" "),a("h3",{attrs:{id:"使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[n._v("#")]),n._v(" 使用方法")]),n._v(" "),a("p",[n._v("在完成了手写签批的 SDK 集成后，即可在相关页面中引用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#import <MDHandSignSDK/MDHandSignSDK.h>\n")])])]),a("p",[n._v("在需要使用到的地方，直接跳转到手写签批的页面，方法如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('MDHandSignVC *mainVC = [[MDHandSignVC alloc] init];\nmainVC.title = @"手写签批";\nmainVC.filePath = sandboxFilePath;\nmainVC.scanStatus = NO;\n[mainVC setSaveSusccePdf:^(NSString *filePath,UIViewController *currentVC) {\n        //filePath：签署后的文件路径     currentVC：手写签批的当前控制器\n    NSLog(@"filePath = %@",filePath);\n}];\n[self.navigationController pushViewController:mainVC animated:YES];\n')])])]),a("h4",{attrs:{id:"参数说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[n._v("#")]),n._v(" 参数说明")]),n._v(" "),a("p",[n._v("1、需要签署的 pdf 的路径，这个是必传参数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///文件路径 -- 必传\n@property (nonatomic, copy) NSString *filePath;\n")])])]),a("p",[n._v("2、该参数是该文件加密后的密钥（该属性暂未生效）")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///文件加密密码 默认是没有加密密码 - 可为 nil\n@property (nonatomic, copy) NSString *filePassword;\n")])])]),a("p",[n._v("3、该参数为 YES 的时候，在退出手写签批模式后，清空签署过程产生的临时文件; NO：则在退出手写签批模式后不清空产生的临时文件")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///是否在退出时清空临时文件，YES：清空临时文件 NO:不清空临时文件 --- 默认不清空临时文件\n@property (nonatomic, assign) BOOL clearTempFile;\n")])])]),a("p",[n._v("4、在退出手写签批后，可返回到指定的控制器 如果 returnControllerClass 为空，则返回上一层页面（在回调方法：saveSusccePdf 不生效时可用）")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///返回到指定的控制器 如果 returnControllerClass 为空，则返回上一层页面\n@property (nonatomic, strong) Class returnControllerClass;\n")])])]),a("p",[n._v("5、进入手写签批控制器时是否是查看状态 YES:查看状态 NO:编辑状态 — 默认为编辑状态")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///是否是查看状态 YES:查看状态 NO:编辑状态 -- 默认为编辑状态\n@property (nonatomic, assign) BOOL scanStatus;\n")])])]),a("p",[n._v("6、是否是子类控制器 - 继承这个控制器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("///是否是子类控制器 - 继承这个控制器\n@property (nonatomic, assign) BOOL isSubClass;\n")])])]),a("p",[n._v("7、保存成功的回调,其中 filePath:保存后文件的路径，currentVC 为手写签批当前的控制器")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("/**\n保存成功的回调\n*/\n@property (nonatomic, copy) void (^saveSusccePdf)(NSString *filePath,UIViewController *currentVC);\n")])])]),a("h3",{attrs:{id:"sdk-下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk-下载"}},[n._v("#")]),n._v(" SDK 下载")]),n._v(" "),a("p",[a("a",{attrs:{href:"http://git.minstone.com.cn/systemnorm/front-end-development/frontend-project-group/hand-sign-group/sdk/ios-sdk.git",title:"iOS集成demo下载",target:"_blank",rel:"noopener noreferrer"}},[n._v("iOS 集成 SDK demo 下载"),a("OutboundLink")],1)]),n._v(" "),a("h3",{attrs:{id:"联系方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系方式"}},[n._v("#")]),n._v(" 联系方式")]),n._v(" "),a("p",[a("code",[n._v("注：由于文档限制文件大小，暂时无法上传 demo，如需要相关的 demo，可联系 iOS 端手写签批开发者，联系方式如下：")])]),n._v(" "),a("p",[n._v("邹明（zoum@minstone.com.cn）"),a("br"),n._v("\n徐达炯（xudj@minstone.com.cn）")]),n._v(" "),a("h2",{attrs:{id:"android"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[n._v("#")]),n._v(" Android")]),n._v(" "),a("p",[n._v("本手写签批最低支持的 android sdk 版本为 17 即 4.2，低于 4.2 版本的暂不支持")]),n._v(" "),a("h3",{attrs:{id:"android-studio-集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-studio-集成"}},[n._v("#")]),n._v(" android studio 集成")]),n._v(" "),a("p",[n._v("1、在工程的 build.gradle 下添加对 objectbox 数据库以及手写签批的一些配置，如：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("buildscript {\n    ext.objectboxVersion = '2.3.4'\n    dependencies {\n\t    classpath 'com.android.tools.build:gradle:3.5.1'\n        classpath \"io.objectbox:objectbox-gradle-plugin:$objectboxVersion\"\n    }\n}\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        //手写签批仓库地址\n        maven {\n            url 'http://192.168.0.91:8081/repository/pdfview-release/'\n        }\n    }\n}\n")])])]),a("p",[n._v("2、为了解决方法数超过 64k 及减小打包时 apk 体积的问题，在 app module 下的 build.gradle 的 defaultConfig 中添加如下配置，同时在 dependencies 下添加手写签批的依赖：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("defaultConfig {\n    applicationId \"com.albert.testpdf\"\n    minSdkVersion 17\n    targetSdkVersion 28\n    versionCode 1\n    versionName \"1.0\"\n    multiDexEnabled true         //解决方法数超过64k问题\n    ndk {\n\t    //只生成armv7的so，可以减小打包后apk的体积，如果想在其它CPU架构的手机上使用，请自行在这里加上去\n        abiFilters 'armeabi-v7a'\n    }\n}\ndependencies {\n    //手写签批依赖\n    implementation 'com.minstone:pdfview:1.0.0'\n}\n")])])]),a("h3",{attrs:{id:"使用方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方法-2"}},[n._v("#")]),n._v(" 使用方法")]),n._v(" "),a("p",[n._v("1、手写签批 sdk 集成完毕后，如果想要使用，首先需要新建一个继承自 MultiDexApplication 的类，重写其 onCreate 方法，并通过 PdfView.getInstance().init(this)对手签进行初始化，如：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("public class App extends MultiDexApplication {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        PdfView.getInstance().init(this);\n    }\n}\n")])])]),a("p",[n._v("然后在 AndroidManifest.xml 清单文件中的 application 下对该 App 进行引用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    package="com.albert.pdftest">\n\n    <application\n        android:name=".App"\n        android:allowBackup="true"\n        android:icon="@mipmap/ic_launcher"\n        android:label="@string/app_name"\n        android:roundIcon="@mipmap/ic_launcher_round"\n        android:supportsRtl="true"\n        android:theme="@style/AppTheme">\n\n    </application>\n\n</manifest>\n')])])]),a("p",[n._v("2、新建一个 Activity，如 HandWritingActivity 作为承载手写签批的容器，并在其布局中添加一个 FrameLayout，如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="utf-8"?>\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:tools="http://schemas.android.com/tools"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    android:orientation="vertical"\n    tools:context=".activity.HandWritingActivity">\n\n    <FrameLayout\n        android:id="@+id/flContainer"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent" />\n\n</LinearLayout>\n')])])]),a("p",[n._v("然后在 HandWritingActivity 中添加如下代码：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("public class HandWritingActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_hand_writing);\n        //pdf签批文件所在的内部存储地址，需要先将pdf签批文件下载下来\n        String pdfUrl = getIntent().getStringExtra(PdfFragment.PDF_URL);\n        PdfFragment pdfFragment = new PdfFragment();\n\t\t//还需要将获取到的pdfUrl传给PdfFragment进行渲染\n        Bundle arg = new Bundle();\n        arg.putString(PdfFragment.PDF_URL, pdfUrl);\n        pdfFragment.setArguments(arg);\n        getSupportFragmentManager().beginTransaction().add(R.id.flContainer, pdfFragment).commit();\n    }\n}\n")])])]),a("p",[n._v("最后在 AndroidManifest.xml 清单文件中注册下该新建的 HandWritingActivity 并为其添加 windowSoftInputMode 属性值为 adjustPan，如：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="utf-8"?>\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n    package="com.albert.testpdfview">\n\n    <application\n        android:name=".App"\n        android:allowBackup="true"\n        android:icon="@mipmap/ic_launcher"\n        android:label="@string/app_name"\n        android:roundIcon="@mipmap/ic_launcher_round"\n        android:supportsRtl="true"\n        android:theme="@style/AppTheme">\n\n        <activity\n            android:name=".activity.HandWritingActivity"\n            android:screenOrientation="portrait"\n            android:windowSoftInputMode="adjustPan"/>\n    </application>\n\n</manifest>\n')])])]),a("p",[n._v("如果想监听手写签批保存成功后或返回的事件，可以通过在 HandWritingActivity 中给 pdfFragment 实例添加回调实现，代码如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('pdfFragment.setOnSignCallback(new ISignCallback() {\n    /**\n     * 保存\n     * @param pdfUrl 保存成功后的pdf路径\n     */\n    @Override\n    public void onSave(String pdfUrl) {\n        Log.i("HandWritingActivity", "onSave: pdfUrl="+pdfUrl);\n    }\n\n    /**\n     * 返回\n     */\n    @Override\n    public void onBack() {\n        Log.i("HandWritingActivity", "onBack: ");\n    }\n});\n')])])]),a("p",[n._v("最后你只需要在使用的地方，通过 startActivity 或 startActivityForResult 的方式带上参数直接跳转到 HandWritingActivity 即可，如：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('String pdfUrl = Environment.getExternalStorageDirectory() + File.separator + "test5.pdf";\nIntent intent = new Intent(MainActivity.this, HandWritingActivity.class);\nintent.putExtra(PdfFragment.PDF_URL, pdfUrl);\nstartActivity(intent);\n')])])]),a("h3",{attrs:{id:"sdk-下载-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sdk-下载-2"}},[n._v("#")]),n._v(" SDK 下载")]),n._v(" "),a("p",[a("a",{attrs:{href:"http://codesync.cn/systemnorm/front-end-development/frontend-project-group/hand-sign-group/hand-sign-demo",title:"android集成demo下载",target:"_blank",rel:"noopener noreferrer"}},[n._v("android 集成 SDK demo 下载"),a("OutboundLink")],1)]),n._v(" "),a("h3",{attrs:{id:"联系方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系方式-2"}},[n._v("#")]),n._v(" 联系方式")]),n._v(" "),a("p",[a("code",[n._v("注：由于文档限制文件大小，暂时无法上传demo，如需要相关的demo，可联系android端手写签批开发者，联系方式如下：")])]),n._v(" "),a("p",[n._v("张金煌（zhangjh@minstone.com.cn）"),a("br"),n._v("\n陈少锋（chenshaof@minstone.com）")])])}),[],!1,null,null,null);t.default=r.exports}}]);